package com.dany.kotlin_mvvm_architecture.model

import com.dany.kotlin_mvvm_architecture.di.DaggerApiComponent
import io.reactivex.Single
import javax.inject.Inject

class AnimalApiService {


	@Inject
	lateinit var api: AnimalApi

	//Run first thing when the class is created
	init {
		// This is generated by Dagger, with the name of
		// the new component we created earlier in the di
		// package, which was an interface with the name
		// -> AnimalComponent

		//The functionality that we defined in the interface ApiComponent
		// will be injected into this AnimalApiService class
		DaggerApiComponent.create().inject(this)
	}
	fun getApiKey(): Single<ApiKey> {
		return api.getApiKeyEndPoint()
	}

	fun getAnimals(key: String): Single<List<Animal>>{
		return api.getAnimalsEndPoint(key)
	}
}